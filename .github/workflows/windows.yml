name: Windows

on: [push, pull_request]

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  CMAKE_GENERATOR: Ninja

jobs:
  build:
    runs-on: windows-2022
    strategy:
      matrix:
        build_mode: ["Debug", "Release"]
        cxx: ["MSVC", "Clang"]
      fail-fast: false
    name: ${{ matrix.cxx }} - ${{ matrix.build_mode }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          lfs: true

      - name: Set up Visual Studio shell
        if: matrix.cxx == 'MSVC'
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Install clang
        if: matrix.cxx == 'Clang'
        uses: egor-tensin/setup-clang@v1

      - name: Install dependencies
        run: |
          choco install ninja ccache
          pip install -r requirements.txt
          conan profile detect --force

      - name: Install ccache
        uses: hendrikmuhs/ccache-action@main
        with:
          key: jml-windows-build-${{ matrix.build_mode }}

      - name: CMake configure
        run: >
          cmake
          -S .
          -G "Ninja"
          -B build
          -D CMAKE_BUILD_TYPE=${{ matrix.build_mode }}
          -D CMAKE_UNITY_BUILD=OFF
          -D CMAKE_PROJECT_TOP_LEVEL_INCLUDES=external/cmake-conan/conan_provider.cmake

      - name: CMake build
        run: cmake --build build

      - name: CTest
        run: ctest --test-dir build -C ${{ matrix.build_mode }} --output-on-failure
